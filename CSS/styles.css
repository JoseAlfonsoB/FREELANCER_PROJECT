/* Son psedoselectores / pseudoelementos: son elementos que no existen o que no estan declarados en el código html}, sin embargo nosotros podemos hacer uso de estos para almacenar variables de CSS (Custom properties). */
:root {
  /* Paleta de colores.
    Variables de CSS / Custom properties.
  */
  --blanco: #ffffff;
  --oscuro: #212121;
  --primario: #ffc107;
  --secundario: #0097a7;
  --gris: #757575;
  --grisClaro: #dfe9f3;
}
/* Globales. */
html {
  font-size: 62.5%;
  box-sizing: border-box;
}
*,
*:before,
*:after {
  box-sizing: inherit;
}
body {
  font-size: 16px; /* 1rem = 10 px*/
  font-family: "Krub", sans-serif;
  /* Degradado de fondo. */
  background-image: linear-gradient(
    to top,
    var(--grisClaro) 0%,
    var(--blanco) 100%
  ); /* Primero le colocamos de donde va a comenzar la direccion del degradado (en este caso va a ir de arriba hacia abajo). */
}
/* Estilos para los Headings. */
h1 {
  font-size: 3.8rem;
}

h2 {
  font-size: 2.8rem;
}

h3 {
  font-size: 1.8rem;
}

h1,
h2,
h3 {
  text-align: center;
}

.titulo span {
  /* Se coloca de esta manera "h1 span" para que los estilos delcarardo se coloquen solo a los span que se encuentren dentro de un elemento h1. */
  font-size: 2rem;
}

.contenedor {
  max-width: 120rem; /* Es el ancho maximo que soporta la página. */
  margin: 0 auto;
}

.boton {
  background-color: var(--secundario);
  color: var(--blanco);
  padding: 1rem 3rem;
  margin-top: 1rem;
  font-style: 2rem;
  text-decoration: none;
  text-transform: uppercase;
  font-weight: bold;
  border-radius: 0.5rem;
  width: 90%;
  text-align: center;
  border: none;
}
@media (min-width: 768px) {
  .boton {
    width: auto;
  }
}
.boton:hover {
  cursor: pointer;
}

.sombra {
  -webkit-box-shadow: 0px 5px 15px 0px rgba(112, 112, 112, 1);
  -moz-box-shadow: 0px 5px 15px 0px rgba(112, 112, 112, 1);
  box-shadow: 0px 5px 15px 0px rgba(112, 112, 112, 1);
  border-radius: 1rem;
  background-color: var(--blanco);
  padding: 5rem;
  margin-top: 4rem;
}

/* Utilidades. */
.w-sm-100 {
  width: 100%;
}
@media (min-width: 768px) {
  .w-sm-100 {
    width: auto;
  }
}
.flex {
  display: flex;
}
.alinear {
  justify-content: flex-end;
}

.nav-bg {
  background-color: var(--secundario);
}
.navegacion-principal {
  display: flex; /* Nos permite acceder a más propiedades. */
  flex-direction: column;
  /*align-items: center;  Para alinear los elementos en el centro. */
}

@media (min-width: 768px) {
  .navegacion-principal {
    flex-direction: row;
    justify-content: space-evenly; /* Para la separacion del texto entre cada enlace. */
  }
}

.navegacion-principal a {
  display: block;
  text-align: center;
  text-decoration: none; /* Esto propiedad es para eliminar la linea inferior de los enlaces. */
  color: var(--blanco);
  font-weight: 700;
  padding: 1rem;
}

.navegacion-principal a:hover {
  background-color: var(--primario);
  color: var(--oscuro);
}

.hero {
  /* AQquí vamos a colocar la imagen de la pagina web. */
  background-image: url(../img/hero.jpg); /* Direccion de la imagen (los dos punto al comienzo son para salir de la carpeta de CSS y entrar a la carpeta de img.)*/
  background-repeat: no-repeat; /*Para no repetir la imagen.*/
  background-size: cover; /* Sirve para rellenar el formato de la imagen. */
  height: 450px; /* Estas dos propiedades son las que me estan dando problemas con los textos de la imagen. */
  /*padding: 20px;*/
  position: relative;
}
.contenido-hero {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.6); /*Sintaxis anterior. */
  background-color: rgb(
    0 0 0 / 60%
  ); /* Sintaxis nueva (no tiene mucho soporte. ) */
  /* Con esto no es necesario que hagamos uso de las coordenadas.  */
  width: 100%;
  height: 100%;
  /* Uso de las cooredenadas.
  bottom: 0;
  right: 0;
  left: 0;
  top: 0;*/

  /* --> CODIGO PARA ALINEAR CONTENIDOS TANTO HORIZONTALMENTE COMO VERTICLAMENTE. <-- */

  display: flex; /* Para colocar el contenido de izquierda a derecha (en "fila"). */
  flex-direction: column;
  align-items: center; /* Para alinear el contenido horizontalmente. */
  justify-content: center; /* Para alinear el contenido verticlamente. */
}

.contenido-hero h2,
.contenido-hero p {
  color: var(--blanco);
}

.ubicacion {
  display: flex;
  align-items: flex-end;
}

.servicios {
  display: grid; /* Esta propiedad nos permite agregar las propiedaddes de CSS Grid. */
  /* Dimensiones de las filas y las columnas.  */

  /*grid-template-columns: 300px 300px;
  grid-template-rows: 200px 800px;*/

  /* Ahora se mostrara una manera mas corta de hacer lo mismo pero con menos código. RECOMENDACIÓN: Primero hay que familiarizarse con la sintaxis de Grid entetior para despues usar la siguiente sintaxis.  */

  /* 
  -> grid: 200px 800px / 300px 300px; <- 
  Aquí se unen las dos indicaciones en una sola linea de código primero coloocamos las dimenciones de los Rows (FILAS) y posteriormente colocamos las dimenciones de las columns (COLUMNAS). Y estas indicaciones las separapos con ayuda de una diagonal. */

  @media (min-width: 768px) {
    /* PARA HACERLO RESPONSIVE. */
    grid-template-columns: repeat(3, 1fr) /* 1fr: Una fracción. Esto es lo mismo que poner: (33.3% 33.3% 33.3%)*/;
    column-gap: 1rem; /* Es como el MARGIN para separar las columnas. */
  }
}

.servicio {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.servicio h3 {
  color: var(--secundario);
  font-weight: normal;
}
.servicio p {
  line-height: 2; /* Nos permite colocar un interlineado a nuestros textos (más o menos separación). */
  text-align: center;
}
.servicio .iconos {
  height: 15rem;
  width: 15rem;
  background-color: var(--primario);
  border-radius: 50%;
  /* Código para centrar los iconos vertical y horizontalmente. */
  display: flex;
  justify-content: space-evenly; /* <- Centrar horizontalmente. */
  align-items: center; /* <- Centrar verticalmente. */
}

.formulario {
  background-color: var(--gris);
  width: min(
    60rem,
    100%
  ); /* Esta propiedad lo que hace es utilizar el valor más pequeño entre las dos opcioens disponibles. */
  margin: 0 auto; /* Para centra elementos de manera horizontal. Esta opcion se utliza cuando su elemento padre no tiene un Display-flex. */
  padding: 2rem;
  border-radius: 1rem;
}

.formulario fieldset {
  border: none;
}

.formulario legend {
  color: var(--primario);
  font-size: 1.8rem;
  font-weight: bold;
  text-align: center;
  text-transform: uppercase;
  padding-bottom: 2rem;
}

.contenedor_campos {
}
.campo label {
  margin-bottom: 1rem;
}
.campo {
  color: var(--blanco);
  font-weight: bold;
  margin-bottom: 0.5rem;
  display: block;
}
/* Colocamos estilos a los inputs por medio de los "selectores de atributos". 
.campo input[type="text"] {
  background-color: red;
}*/
.input-text {
  width: 100%;
  border: none;
  padding: 1.5rem;
  border-radius: 0.5rem;
}
